//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestAndSoapWSLabClientConsole.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeStation", Namespace="http://schemas.datacontract.org/2004/07/RestAndSoapWSLab")]
    [System.SerializableAttribute()]
    public partial class CompositeStation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Available_Bike_StandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Available_BikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Bike_StandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Contract_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Last_UpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestAndSoapWSLabClientConsole.ServiceReference1.Position PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available_Bike_Stands {
            get {
                return this.Available_Bike_StandsField;
            }
            set {
                if ((this.Available_Bike_StandsField.Equals(value) != true)) {
                    this.Available_Bike_StandsField = value;
                    this.RaisePropertyChanged("Available_Bike_Stands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available_Bikes {
            get {
                return this.Available_BikesField;
            }
            set {
                if ((this.Available_BikesField.Equals(value) != true)) {
                    this.Available_BikesField = value;
                    this.RaisePropertyChanged("Available_Bikes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Banking {
            get {
                return this.BankingField;
            }
            set {
                if ((this.BankingField.Equals(value) != true)) {
                    this.BankingField = value;
                    this.RaisePropertyChanged("Banking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Bike_Stands {
            get {
                return this.Bike_StandsField;
            }
            set {
                if ((this.Bike_StandsField.Equals(value) != true)) {
                    this.Bike_StandsField = value;
                    this.RaisePropertyChanged("Bike_Stands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contract_Name {
            get {
                return this.Contract_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Contract_NameField, value) != true)) {
                    this.Contract_NameField = value;
                    this.RaisePropertyChanged("Contract_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Last_Update {
            get {
                return this.Last_UpdateField;
            }
            set {
                if ((this.Last_UpdateField.Equals(value) != true)) {
                    this.Last_UpdateField = value;
                    this.RaisePropertyChanged("Last_Update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestAndSoapWSLabClientConsole.ServiceReference1.Position Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/RestAndSoapWSLab")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LngField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lng {
            get {
                return this.LngField;
            }
            set {
                if ((this.LngField.Equals(value) != true)) {
                    this.LngField = value;
                    this.RaisePropertyChanged("Lng");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeContract", Namespace="http://schemas.datacontract.org/2004/07/RestAndSoapWSLab")]
    [System.SerializableAttribute()]
    public partial class CompositeContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Commercial_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Country_CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Cities {
            get {
                return this.CitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CitiesField, value) != true)) {
                    this.CitiesField = value;
                    this.RaisePropertyChanged("Cities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Commercial_Name {
            get {
                return this.Commercial_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Commercial_NameField, value) != true)) {
                    this.Commercial_NameField = value;
                    this.RaisePropertyChanged("Commercial_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country_Code {
            get {
                return this.Country_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Country_CodeField, value) != true)) {
                    this.Country_CodeField = value;
                    this.RaisePropertyChanged("Country_Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getStationsInfos", ReplyAction="http://tempuri.org/IService1/getStationsInfosResponse")]
        RestAndSoapWSLabClientConsole.ServiceReference1.CompositeStation getStationsInfos(string contractName, string stationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getStationsInfos", ReplyAction="http://tempuri.org/IService1/getStationsInfosResponse")]
        System.Threading.Tasks.Task<RestAndSoapWSLabClientConsole.ServiceReference1.CompositeStation> getStationsInfosAsync(string contractName, string stationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getStationsNames", ReplyAction="http://tempuri.org/IService1/getStationsNamesResponse")]
        string[] getStationsNames(string contractName, string stationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getStationsNames", ReplyAction="http://tempuri.org/IService1/getStationsNamesResponse")]
        System.Threading.Tasks.Task<string[]> getStationsNamesAsync(string contractName, string stationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getContractsNames", ReplyAction="http://tempuri.org/IService1/getContractsNamesResponse")]
        string[] getContractsNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getContractsNames", ReplyAction="http://tempuri.org/IService1/getContractsNamesResponse")]
        System.Threading.Tasks.Task<string[]> getContractsNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllContracts", ReplyAction="http://tempuri.org/IService1/getAllContractsResponse")]
        RestAndSoapWSLabClientConsole.ServiceReference1.CompositeContract[] getAllContracts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getAllContracts", ReplyAction="http://tempuri.org/IService1/getAllContractsResponse")]
        System.Threading.Tasks.Task<RestAndSoapWSLabClientConsole.ServiceReference1.CompositeContract[]> getAllContractsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCacheTimeOutMinutes", ReplyAction="http://tempuri.org/IService1/getCacheTimeOutMinutesResponse")]
        int getCacheTimeOutMinutes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCacheTimeOutMinutes", ReplyAction="http://tempuri.org/IService1/getCacheTimeOutMinutesResponse")]
        System.Threading.Tasks.Task<int> getCacheTimeOutMinutesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setCacheTimeOutMinutes", ReplyAction="http://tempuri.org/IService1/setCacheTimeOutMinutesResponse")]
        void setCacheTimeOutMinutes(int newValueMinutes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setCacheTimeOutMinutes", ReplyAction="http://tempuri.org/IService1/setCacheTimeOutMinutesResponse")]
        System.Threading.Tasks.Task setCacheTimeOutMinutesAsync(int newValueMinutes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : RestAndSoapWSLabClientConsole.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<RestAndSoapWSLabClientConsole.ServiceReference1.IService1>, RestAndSoapWSLabClientConsole.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RestAndSoapWSLabClientConsole.ServiceReference1.CompositeStation getStationsInfos(string contractName, string stationName) {
            return base.Channel.getStationsInfos(contractName, stationName);
        }
        
        public System.Threading.Tasks.Task<RestAndSoapWSLabClientConsole.ServiceReference1.CompositeStation> getStationsInfosAsync(string contractName, string stationName) {
            return base.Channel.getStationsInfosAsync(contractName, stationName);
        }
        
        public string[] getStationsNames(string contractName, string stationName) {
            return base.Channel.getStationsNames(contractName, stationName);
        }
        
        public System.Threading.Tasks.Task<string[]> getStationsNamesAsync(string contractName, string stationName) {
            return base.Channel.getStationsNamesAsync(contractName, stationName);
        }
        
        public string[] getContractsNames() {
            return base.Channel.getContractsNames();
        }
        
        public System.Threading.Tasks.Task<string[]> getContractsNamesAsync() {
            return base.Channel.getContractsNamesAsync();
        }
        
        public RestAndSoapWSLabClientConsole.ServiceReference1.CompositeContract[] getAllContracts() {
            return base.Channel.getAllContracts();
        }
        
        public System.Threading.Tasks.Task<RestAndSoapWSLabClientConsole.ServiceReference1.CompositeContract[]> getAllContractsAsync() {
            return base.Channel.getAllContractsAsync();
        }
        
        public int getCacheTimeOutMinutes() {
            return base.Channel.getCacheTimeOutMinutes();
        }
        
        public System.Threading.Tasks.Task<int> getCacheTimeOutMinutesAsync() {
            return base.Channel.getCacheTimeOutMinutesAsync();
        }
        
        public void setCacheTimeOutMinutes(int newValueMinutes) {
            base.Channel.setCacheTimeOutMinutes(newValueMinutes);
        }
        
        public System.Threading.Tasks.Task setCacheTimeOutMinutesAsync(int newValueMinutes) {
            return base.Channel.setCacheTimeOutMinutesAsync(newValueMinutes);
        }
    }
}
