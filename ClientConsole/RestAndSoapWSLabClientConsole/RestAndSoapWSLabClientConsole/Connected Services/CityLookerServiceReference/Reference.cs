//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestAndSoapWSLabClientConsole.CityLookerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeStation", Namespace="http://schemas.datacontract.org/2004/07/RestAndSoapWSLab")]
    [System.SerializableAttribute()]
    public partial class CompositeStation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Available_Bike_StandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Available_BikesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BankingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Bike_StandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BonusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Contract_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Last_UpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RestAndSoapWSLabClientConsole.CityLookerServiceReference.Position PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available_Bike_Stands {
            get {
                return this.Available_Bike_StandsField;
            }
            set {
                if ((this.Available_Bike_StandsField.Equals(value) != true)) {
                    this.Available_Bike_StandsField = value;
                    this.RaisePropertyChanged("Available_Bike_Stands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available_Bikes {
            get {
                return this.Available_BikesField;
            }
            set {
                if ((this.Available_BikesField.Equals(value) != true)) {
                    this.Available_BikesField = value;
                    this.RaisePropertyChanged("Available_Bikes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Banking {
            get {
                return this.BankingField;
            }
            set {
                if ((this.BankingField.Equals(value) != true)) {
                    this.BankingField = value;
                    this.RaisePropertyChanged("Banking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Bike_Stands {
            get {
                return this.Bike_StandsField;
            }
            set {
                if ((this.Bike_StandsField.Equals(value) != true)) {
                    this.Bike_StandsField = value;
                    this.RaisePropertyChanged("Bike_Stands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Bonus {
            get {
                return this.BonusField;
            }
            set {
                if ((this.BonusField.Equals(value) != true)) {
                    this.BonusField = value;
                    this.RaisePropertyChanged("Bonus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contract_Name {
            get {
                return this.Contract_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Contract_NameField, value) != true)) {
                    this.Contract_NameField = value;
                    this.RaisePropertyChanged("Contract_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Last_Update {
            get {
                return this.Last_UpdateField;
            }
            set {
                if ((this.Last_UpdateField.Equals(value) != true)) {
                    this.Last_UpdateField = value;
                    this.RaisePropertyChanged("Last_Update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RestAndSoapWSLabClientConsole.CityLookerServiceReference.Position Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/RestAndSoapWSLab")]
    [System.SerializableAttribute()]
    public partial class Position : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LngField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lat {
            get {
                return this.LatField;
            }
            set {
                if ((this.LatField.Equals(value) != true)) {
                    this.LatField = value;
                    this.RaisePropertyChanged("Lat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lng {
            get {
                return this.LngField;
            }
            set {
                if ((this.LngField.Equals(value) != true)) {
                    this.LngField = value;
                    this.RaisePropertyChanged("Lng");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CityLookerServiceReference.ICityLookerService", CallbackContract=typeof(RestAndSoapWSLabClientConsole.CityLookerServiceReference.ICityLookerServiceCallback))]
    public interface ICityLookerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICityLookerService/GetNumberOfBikes", ReplyAction="http://tempuri.org/ICityLookerService/GetNumberOfBikesResponse")]
        void GetNumberOfBikes(string city, string stationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICityLookerService/GetNumberOfBikes", ReplyAction="http://tempuri.org/ICityLookerService/GetNumberOfBikesResponse")]
        System.Threading.Tasks.Task GetNumberOfBikesAsync(string city, string stationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesEvent", ReplyAction="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesEventResponse")]
        void SubscribeNewNumberOfBikesEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesEvent", ReplyAction="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesEventResponse")]
        System.Threading.Tasks.Task SubscribeNewNumberOfBikesEventAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesFinishedEvent", ReplyAction="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesFinishedEventRespo" +
            "nse")]
        void SubscribeNewNumberOfBikesFinishedEvent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesFinishedEvent", ReplyAction="http://tempuri.org/ICityLookerService/SubscribeNewNumberOfBikesFinishedEventRespo" +
            "nse")]
        System.Threading.Tasks.Task SubscribeNewNumberOfBikesFinishedEventAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICityLookerServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICityLookerService/NewNumberOfBikes")]
        void NewNumberOfBikes(string city, RestAndSoapWSLabClientConsole.CityLookerServiceReference.CompositeStation station);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICityLookerService/NewBikesFounded")]
        void NewBikesFounded();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICityLookerServiceChannel : RestAndSoapWSLabClientConsole.CityLookerServiceReference.ICityLookerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CityLookerServiceClient : System.ServiceModel.DuplexClientBase<RestAndSoapWSLabClientConsole.CityLookerServiceReference.ICityLookerService>, RestAndSoapWSLabClientConsole.CityLookerServiceReference.ICityLookerService {
        
        public CityLookerServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CityLookerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CityLookerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CityLookerServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CityLookerServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetNumberOfBikes(string city, string stationName) {
            base.Channel.GetNumberOfBikes(city, stationName);
        }
        
        public System.Threading.Tasks.Task GetNumberOfBikesAsync(string city, string stationName) {
            return base.Channel.GetNumberOfBikesAsync(city, stationName);
        }
        
        public void SubscribeNewNumberOfBikesEvent() {
            base.Channel.SubscribeNewNumberOfBikesEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeNewNumberOfBikesEventAsync() {
            return base.Channel.SubscribeNewNumberOfBikesEventAsync();
        }
        
        public void SubscribeNewNumberOfBikesFinishedEvent() {
            base.Channel.SubscribeNewNumberOfBikesFinishedEvent();
        }
        
        public System.Threading.Tasks.Task SubscribeNewNumberOfBikesFinishedEventAsync() {
            return base.Channel.SubscribeNewNumberOfBikesFinishedEventAsync();
        }
    }
}
